/**
* A Simple Way To Create Class With Extends And Implementation In Javascript (OOP)
* The MIT License - Copyright (c) 2013 Hongbo Yang <abcrun@gmail.com>
* Repository - https://github.com/abcrun/Class.git
* Version - 0.3.0
*/(function(e,t){typeof define=="function"&&define.amd?define(t):typeof module=="object"&&module.exports?module.exports=t():this[e]=t()})("Class",function(){var e=Object.hasOwnProperty,t=function(e){return e===null?"null":e===undefined?"undefined":typeof e=="function"?"function":/\s(\w+)/.exec(toString.call(e).toLowerCase())[1]},n=function(e){return i(this,e)},r=function(t){for(key in t)e.call(t,key)&&(this[key]=t[key]);return this},i=function(e,i,s){var o,u=t(e),a=t(i),f=new Function;e=u=="function"?[e]:u=="object"?(o=e)&&[e.main||function(){}]:[function(){}],i=a==="function"?(e=e.concat(i))&&i.prototype:a==="object"?i:a==="array"?(s=i)&&null:/(?:number|string)/.test(a)?(s=[i])&&null:null,s=s&&t(s)!=="array"?[s]:s,i=i||{},i.extends||(i.extends=n),i.implements||(i.implements=r),f.prototype=i;var l=new f;while(e.length)e.shift().apply(l,s);return o&&r.call(l,o),e=i=s=o=null,l},s=function(t){var n=!0;for(key in t)if(e.call(t,key)&&!/main|extends|parameters|implements/.test(key)){n=!1;break}return n},o={};return o.create=function(){var e=arguments;if(e.length==1&&t(e)=="object"&&s(e[0])){e=e[0];var n=e.main||function(){},r=e.extends,o=e.parameters,u=e.implements;return i(n,r,o).implements(u)}return i.apply(this,e)},o})
