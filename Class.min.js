/**
* A Simple Way To Create Class With Extends And Implementation In Javascript (OOP)
* The MIT License - Copyright (c) 2013 Hongbo Yang <abcrun@gmail.com>
* Repository - https://github.com/abcrun/Class.git
*/(function(e,t){typeof define=="function"&&define.amd?define(t):typeof module=="object"&&module.exports?module.exports=t():this[e]=t()})("Class",function(){var e=function(e){return e===null?"null":e===undefined?"undefined":typeof e=="function"?"function":/\s(\w+)/.exec(toString.call(e).toLowerCase())[1]},t=function(e){for(key in e)this[key]=e[key];return this},n=function(n,r){var i,s=e(n),o=e(r),u=r;n=s=="function"?[n]:s=="object"?(i=n)&&[n.constructor||function(){}]:[function(){}],i&&delete i.constructor,r=o=="function"?(n=n.concat(r.constructor||r))&&r.prototype:o=="object"?r:null,r=r||{};if(!u||!u.extends)r.extends=t;var a=function(){i&&t.call(this,i)};a.prototype=r;var f=function(){var e=n.length;for(var t=e-1;t>=0;t--)n[t].apply(this,arguments)};return f.constructor=n[0],f.prototype=new a,f.extends=function(r){return r.extends||(r.extends=r.extends||t),n=[this.constructor],this.prototype=r,e(r)=="function"&&(n=n.concat(r.constructor||r),this.prototype=r.prototype),this},f.implements=function(e){this.prototype=(new a).extends(e)},f},r={};return r.create=n,r})
